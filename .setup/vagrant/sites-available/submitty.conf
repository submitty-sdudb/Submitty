<VirtualHost SUBMITTY_URL:80>
    AddDefaultCharset utf-8
    ServerAdmin ADMIN@DOMAIN.HERE
    ServerName localhost

    DocumentRoot /usr/local/submitty/site/public
    ScriptAlias /cgi-bin /usr/local/submitty/site/cgi-bin
    ScriptAlias /git/ /usr/local/submitty/site/cgi-bin/git-http-backend/

    DirectoryIndex index.html index.php index.htm index.cgi

    # Use the apache2-suexec-custom module to set a user/group that
    # we use for all requests that hit this configuration. Therefore,
    # all files/directories that get executed must also be owned by
    # this user, and so helps us make sure we're better isolated
    # from any potential other apache2 configurations that are active.
    SuexecUserGroup submitty_cgi submitty_cgi

    # Disables use of .htaccess for Submitty. While this is technically
    # the default for Apache (as of 2.3.9), we leave this here just
    # to make sure we don't ever accidently start allowing .htaccess
    <Directory />
        AllowOverride None
    </Directory>

    # Allow anyone to access things under site/public
    <Directory /usr/local/submitty/site/public>
        Require all granted

        RewriteEngine On

        # If the requested filename exists, simply serve it.
        RewriteCond %{REQUEST_FILENAME} -f
        RewriteRule ^ - [L]

        # Else rewrite urls to use index.php, however we have to be aware of two
        # possible conditions of whether index.php is in the URL already or not.
        # To be backwards compatible, we want to ensure that having /index.php
        # is valid and usable. In anycase, we rewrite everything up-to /index.php
        # to be the "url" parameter of the query, and then append whatever else we
        # had in the QUERY_STRING after it.
        RewriteRule ^(.+)/index\.php$ /index.php?url=$1&%{QUERY_STRING} [NC,END]
        RewriteRule ^(.+)$ /index.php?url=$1&%{QUERY_STRING} [NC,END]

        # Allow Authorization header to pass
        SetEnvIf Authorization "(.*)" HTTP_AUTHORIZATION=$1
    </Directory>

    # For cgi-bin/ we want to restrict it to only be accessible
    # to requests coming from the site internally.
    <Directory /usr/local/submitty/site/cgi-bin>
        Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
        AddHandler cgi-script .cgi
        Require ip SUBMITTY_URL
    </Directory>

    # Git we want to leave open though, with the expectation
    # that we will restrict access below to the git-http-backend
    <Directory /usr/lib/git-core>
        Options +ExecCGI +SymLinksIfOwnerMatch
        AllowOverride None
        Require all granted
    </Directory>

    # Set a handler for the PHP scripts, which in this case is proxying
    # to PHP-FPM. PHP-FPM also sets the user/group that executes the
    # PHP scripts and so they're not affected by the above SuexecUserGroup
    <FilesMatch "\.php$">
        <If "-f %{REQUEST_FILENAME}">
            SetHandler "proxy:unix:/var/run/php/php-fpm-submitty.sock|fcgi://localhost/"
        </If>
    </FilesMatch>

    # Define a matching worker for proxying requests. The max
    # number of workers should match the number of available
    # children that you define within PHP-FPM's configuration. 
    # The part that is matched to the SetHandler is the part that
    # follows the pipe. If you need to distinguish, "localhost; can
    # be anything unique.
    <Proxy "fcgi://localhost/" enablereuse=on max=20>
    </Proxy>

    # These directives block any requests going to things that start
    # with a "." or "#" or end with a "~", as these are either
    # private files, or tmp files created by some editor.
    <Files .*>
        Require all denied
    </Files>

    <Files *~>
        Require all denied
    </Files>

    <Files #*>
        Require all denied
    </Files>

    # This overwrites the cgi-bin Directory directive, so that we
    # no longer worry about the IP require line, but rather they
    # just need to be a valid-user. To handle the authentication
    # we use the libapache2-mod-wsgi-py3 module so that we can
    # use a complex python script that checks stuff in the database/PAM
    # and the exact directory trying to be accessed
    <Files "git-http-backend">
        AuthType Basic
        AuthName "Git Access"
        AuthBasicProvider wsgi
        WSGIAuthUserScript /usr/local/submitty/sbin/authentication.py
        #Require expr !(%{QUERY_STRING} -strmatch '*service=git-receive-pack*' || %{REQUEST_URI} =~ m#/git-receive-pack$#)
        Require valid-user
    </Files>

    # https://httpd.apache.org/docs/2.4/mod/core.html#loglevel
    # If you experience weird issues with apache2, you'll want to
    # probably drop this to info or debug, but that for general
    # operation, just warn is fine
    LogLevel warn
    ErrorLog ${APACHE_LOG_DIR}/submitty.log
    CustomLog ${APACHE_LOG_DIR}/submitty.log combined
</VirtualHost>
