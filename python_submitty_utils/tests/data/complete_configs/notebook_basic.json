{
    "assignment_message": "#Welcome To My Favorite Notebook Gradeable\n  \n  This message will appear in a blue box at the top of the page.",
    "autograding": {
        "compilation_to_runner": [
            "**/*.out",
            "**/*.class",
            "test08/cpp_prime.out"
        ],
        "compilation_to_validation": [
            "test*/STDOUT*.txt",
            "test*/STDERR*.txt",
            "test08/cpp_prime.out"
        ],
        "submission_to_compilation": [
            "*.txt",
            "*.cpp",
            "*.py"
        ],
        "submission_to_runner": [
            "*.txt",
            "*.out",
            "*.py"
        ],
        "submission_to_validation": [
            "*.txt",
            "*.png"
        ],
        "use_checkout_subdirectory": "",
        "work_to_details": [
            "*.txt",
            "*.png",
            "test*/*.txt",
            "test*/*_diff.json",
            "test01/math_1.txt",
            "test02/math_2.txt",
            "test03/math_3.txt",
            "test04/math_4.txt",
            "test05/animal_1.txt",
            "test06/animal_2.txt",
            "test07/animal_3.txt",
            "test08/STDERR.txt",
            "test08/STDOUT.txt",
            "test09/STDOUT.txt",
            "test09/STDERR.txt",
            "test10/STDOUT.txt",
            "test10/STDERR.txt"
        ]
    },
    "autograding_method": "jailed_sandbox",
    "container_options": {
        "container_image": "submitty/autograding-default:latest",
        "number_of_ports": 1,
        "single_port_per_container": false,
        "use_router": false
    },
    "hide_submitted_files": true,
    "notebook": [
        {
            "markdown_string": "#Instructions\n  \n  Here's a short list of instructions:\n  * This is an open-book quiz.\n  * You have 20 minutes to submit your answers.\n",
            "type": "markdown"
        },
        {
            "markdown_string": "#Let's do Math!",
            "type": "markdown"
        },
        {
            "markdown_string": "###What is `2 + 2`?",
            "type": "markdown"
        },
        {
            "choices": [
                {
                    "description": "`2`",
                    "value": "a"
                },
                {
                    "description": "`3`",
                    "value": "b"
                },
                {
                    "description": "`4`",
                    "value": "c"
                },
                {
                    "description": "`5`",
                    "value": "d"
                },
                {
                    "description": "*none of the above*",
                    "value": "e"
                }
            ],
            "filename": "math_1.txt",
            "testcase_ref": "math_1",
            "type": "multiple_choice"
        },
        {
            "markdown_string": "###What is `3 + 3`?",
            "type": "markdown"
        },
        {
            "choices": [
                {
                    "description": "`3`",
                    "value": "a"
                },
                {
                    "description": "`4`",
                    "value": "b"
                },
                {
                    "description": "`5`",
                    "value": "c"
                },
                {
                    "description": "`6`",
                    "value": "d"
                },
                {
                    "description": "*none of the above*",
                    "value": "e"
                }
            ],
            "filename": "math_2.txt",
            "testcase_ref": "math_2",
            "type": "multiple_choice"
        },
        {
            "markdown_string": "###Select *all* statements that are true:",
            "type": "markdown"
        },
        {
            "allow_multiple": true,
            "choices": [
                {
                    "description": "`1 + 1 = 2`",
                    "value": "a"
                },
                {
                    "description": "`4 - 2 = 3`",
                    "value": "b"
                },
                {
                    "description": "`2 * 2 = 4`",
                    "value": "c"
                },
                {
                    "description": "`6 / 2 = 4`",
                    "value": "d"
                }
            ],
            "filename": "math_3.txt",
            "testcase_ref": "math_3",
            "type": "multiple_choice"
        },
        {
            "markdown_string": "###Select *all* numbers that are powers of 2:",
            "type": "markdown"
        },
        {
            "allow_multiple": true,
            "choices": [
                {
                    "description": "`4`",
                    "value": "4"
                },
                {
                    "description": "`24`",
                    "value": "24"
                },
                {
                    "description": "`32`",
                    "value": "32"
                },
                {
                    "description": "`96`",
                    "value": "96"
                },
                {
                    "description": "`128`",
                    "value": "128"
                },
                {
                    "description": "`524`",
                    "value": "524"
                }
            ],
            "filename": "math_4.txt",
            "randomize_order": true,
            "testcase_ref": "math_4",
            "type": "multiple_choice"
        },
        {
            "markdown_string": "#At the Zoo!",
            "type": "markdown"
        },
        {
            "alt_text": "Animal 1",
            "height": 213,
            "image": "panda.png",
            "type": "image",
            "width": 320
        },
        {
            "markdown_string": "What is the type of the above animal?",
            "type": "markdown"
        },
        {
            "filename": "animal_1.txt",
            "testcase_ref": "animal_1",
            "type": "short_answer"
        },
        {
            "alt_text": "Animal 2",
            "height": 219,
            "image": "pig.png",
            "type": "image",
            "width": 300
        },
        {
            "markdown_string": "What is the type of the above animal?",
            "type": "markdown"
        },
        {
            "filename": "animal_2.txt",
            "initial_value": "hint, I say OINK",
            "testcase_ref": "animal_2",
            "type": "short_answer"
        },
        {
            "alt_text": "Animal 3",
            "height": 240,
            "image": "zebra.png",
            "type": "image",
            "width": 286
        },
        {
            "markdown_string": "What is the type of the above animal?",
            "type": "markdown"
        },
        {
            "filename": "animal_3.txt",
            "testcase_ref": "animal_3",
            "type": "short_answer"
        },
        {
            "markdown_string": "#Story Time!\n  *Note: the problems in this section will not be auto-graded*",
            "type": "markdown"
        },
        {
            "markdown_string": "###Who is your favorite author?",
            "type": "markdown"
        },
        {
            "filename": "author.txt",
            "type": "short_answer"
        },
        {
            "markdown_string": "###Write a haiku:\n  Wikipedia: [Haiku in English](https://en.wikipedia.org/wiki/Haiku_in_English)",
            "type": "markdown"
        },
        {
            "filename": "haiku.txt",
            "initial_value": "5\n7\n5",
            "rows": 3,
            "type": "short_answer"
        },
        {
            "markdown_string": "#Hour of Code!",
            "type": "markdown"
        },
        {
            "markdown_string": "###Finish the C++ code below to print all prime numbers less than 100.",
            "testcase_ref": "cpp_prime_compilation",
            "type": "markdown"
        },
        {
            "filename": "cpp_codebox.cpp",
            "initial_value": "#include <iostream>\nint main() {\n  for (int i = 2; i < 100; i++) {\n\n\n\n    std::cout << i << std::endl;\n  }\n}",
            "programming_language": "cpp",
            "rows": 10,
            "testcase_ref": "cpp_prime_testing",
            "type": "short_answer"
        },
        {
            "markdown_string": "###Finish the Python code below to print all prime numbers less than 100.",
            "type": "markdown"
        },
        {
            "filename": "python_codebox.py",
            "initial_value": "for i in range(2, 100):\n\n\n\n    print(i)",
            "programming_language": "python",
            "testcase_ref": "python_prime",
            "type": "short_answer"
        }
    ],
    "publish_actions": false,
    "testcases": [
        {
            "containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 3,
            "pre_commands": [],
            "publish_actions": false,
            "single_port_per_container": false,
            "solution_containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "testcase_label": "math_1",
            "timestamped_stdout": false,
            "title": "Math 1",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "math_1.txt",
                    "deduction": 1.0,
                    "expected_file": "math_1_answer.txt",
                    "failure_message": "Incorrect Answer",
                    "method": "diff",
                    "show_actual": "never",
                    "show_expected": "never",
                    "show_message": "always"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 3,
            "pre_commands": [],
            "publish_actions": false,
            "single_port_per_container": false,
            "solution_containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "testcase_label": "math_2",
            "timestamped_stdout": false,
            "title": "Math 2",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "math_2.txt",
                    "deduction": 1.0,
                    "expected_file": "math_2_answer.txt",
                    "failure_message": "Incorrect Answer",
                    "method": "diff",
                    "show_actual": "never",
                    "show_expected": "never",
                    "show_message": "always"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 3,
            "pre_commands": [],
            "publish_actions": false,
            "single_port_per_container": false,
            "solution_containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "testcase_label": "math_3",
            "timestamped_stdout": false,
            "title": "Math 3",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "math_3.txt",
                    "deduction": 1.0,
                    "expected_file": "math_3_answer.txt",
                    "failure_message": "Incorrect Answer",
                    "method": "diff",
                    "show_actual": "never",
                    "show_expected": "never",
                    "show_message": "always"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 5,
            "pre_commands": [],
            "publish_actions": false,
            "single_port_per_container": false,
            "solution_containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "testcase_label": "math_4",
            "timestamped_stdout": false,
            "title": "Math 4",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "math_4.txt",
                    "comparison": "byLine",
                    "deduction": 1.0,
                    "expected_file": "math_4_answer.txt",
                    "lineSwapOk": true,
                    "method": "diff",
                    "show_actual": "never",
                    "show_expected": "never",
                    "show_message": "always"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 2,
            "pre_commands": [],
            "publish_actions": false,
            "single_port_per_container": false,
            "solution_containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "testcase_label": "animal_1",
            "timestamped_stdout": false,
            "title": "Animal 1",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "animal_1.txt",
                    "deduction": 1.0,
                    "expected_file": "animal_1_answer.txt",
                    "failure_message": "Incorrect Answer (note: make sure your answer is lowercase)",
                    "method": "diff",
                    "show_actual": "never",
                    "show_expected": "never",
                    "show_message": "always"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 2,
            "pre_commands": [],
            "publish_actions": false,
            "single_port_per_container": false,
            "solution_containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "testcase_label": "animal_2",
            "timestamped_stdout": false,
            "title": "Animal 2",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "animal_2.txt",
                    "deduction": 1.0,
                    "expected_file": "animal_2_answer.txt",
                    "failure_message": "Incorrect Answer (note: make sure your answer is lowercase)",
                    "method": "diff",
                    "show_actual": "never",
                    "show_expected": "never",
                    "show_message": "always"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 2,
            "pre_commands": [],
            "publish_actions": false,
            "single_port_per_container": false,
            "solution_containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "testcase_label": "animal_3",
            "timestamped_stdout": false,
            "title": "Animal 3",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "animal_3.txt",
                    "deduction": 1.0,
                    "expected_file": "animal_3_answer.txt",
                    "failure_message": "Incorrect Answer (note: make sure your answer is lowercase)",
                    "method": "diff",
                    "show_actual": "never",
                    "show_expected": "never",
                    "show_message": "always"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "clang++ -Wall -o cpp_prime.out cpp_codebox.cpp"
                    ],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "executable_name": "cpp_prime.out",
            "points": 1,
            "pre_commands": [],
            "publish_actions": false,
            "single_port_per_container": false,
            "solution_containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "testcase_label": "prime_cpp_compilation",
            "timestamped_stdout": false,
            "title": "C++ Code for Primes -- Compilation",
            "type": "Compilation",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "STDERR.txt",
                    "deduction": 0.0,
                    "description": "Compilation Errors and/or Warnings",
                    "method": "errorIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "cpp_prime.out",
                    "deduction": 1.0,
                    "description": "Create Executable",
                    "method": "fileExists",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "STDOUT.txt",
                    "deduction": 0.0,
                    "description": "Standard Output (STDOUT.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "./cpp_prime.out"
                    ],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 4,
            "pre_commands": [],
            "publish_actions": false,
            "single_port_per_container": false,
            "solution_containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "testcase_label": "prime_cpp_testing",
            "timestamped_stdout": false,
            "title": "C++ Code for Primes -- Testing",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "STDOUT.txt",
                    "deduction": 1,
                    "expected_file": "prime_answer.txt",
                    "failure_message": "Incorrect Answer/Output",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "STDERR.txt",
                    "deduction": 0.5,
                    "description": "Standard Error (STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "containers": [
                {
                    "commands": [
                        "python3 ./python_codebox.py"
                    ],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "dispatcher_actions": [],
            "points": 5,
            "pre_commands": [],
            "publish_actions": false,
            "single_port_per_container": false,
            "solution_containers": [
                {
                    "commands": [],
                    "container_image": "submitty/autograding-default:latest",
                    "container_name": "container0",
                    "number_of_ports": 1,
                    "outgoing_connections": [],
                    "server": false
                }
            ],
            "testcase_label": "prime_python",
            "timestamped_stdout": false,
            "title": "Python Code for Primes",
            "use_router": false,
            "validation": [
                {
                    "actual_file": "STDOUT.txt",
                    "deduction": 1,
                    "expected_file": "prime_answer.txt",
                    "failure_message": "Incorrect Answer/Output",
                    "method": "diff",
                    "show_actual": "always",
                    "show_expected": "always",
                    "show_message": "on_failure"
                },
                {
                    "actual_file": "STDERR.txt",
                    "deduction": 0,
                    "description": "Standard Error (STDERR.txt)",
                    "method": "warnIfNotEmpty",
                    "show_actual": "on_failure",
                    "show_message": "on_failure"
                }
            ]
        },
        {
            "max_submissions": 20,
            "penalty": -0.1,
            "points": -5,
            "publish_actions": false,
            "timestamped_stdout": false,
            "title": "Submission Limit",
            "type": "FileCheck"
        }
    ],
    "timestamped_stdout": false
}
