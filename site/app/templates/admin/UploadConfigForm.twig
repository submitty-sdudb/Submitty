{% import _self as self %}

<div class="content">
    <h2>Upload Gradeable Config</h2>

    <br><br>
    <p>
        Following the assignment configuration specifications:<br>
        <a href="http://submitty.org/instructor/Assignment-Configuration">
            http://submitty.org/instructor/Assignment-Configuration</a><br>
        and examples:<br>
        <a target=_blank href="https://github.com/Submitty/Tutorial/tree/master/examples">Submitty Tutorial example autograding configurations</a><br>
        <a target=_blank href="https://github.com/Submitty/Submitty/tree/master/more_autograding_examples">Additional example autograding configurations</a><br>
    </p>

    <br><br>
    <p>
        Prepare your assignment configuration as a single <code>config.json</code> file.<br>
        Or as a zip of the <code>config.json</code>, and the directories <code>provided_code</code>,
        <code>test_input</code>, <code>test_output</code>, and/or <code>custom_validation_code</code>.
    </p>

    <br><br>

    <form action="{{ core.buildUrl({'component': 'admin', 'page': 'gradeable', 'action': 'process_upload_config'}) }}" method="POST" enctype="multipart/form-data">
        <input type="hidden" name="csrf_token" value="{{ core.getCsrfToken() }}" />
        Upload Config: <input type="file" name="config_upload" /><br />
        <input type="submit" value="Upload" />
    </form>
</div>

{% if all_files|length > 0 %}
<div class="content">
    <h2>Previous Uploads</h2>
    <br>
    <b>located in {{ target_dir }}</b>
    <br>&nbsp;<br>
    <ul>
        {{ self.display_files(self, all_files, 1, false) }}
    </ul>
</div>
{% endif %}

{% if has_last_build_output %}
<div class="content">
    <h2>Output from most recent BUILD_{{ course }}.sh</h2>
    <br>
    <b>{{ build_script_output_file }}</b>
    <br>
    <br>
    <pre>{{ contents }}</pre>
</div>
{% endif %}

{% macro display_files(self, files, indent, seen_root) %}
    {% set margin_left = 15 %}
    {% set neg_margin_left = -15 * indent %}
    {% for name, file in files %}
        {% set id = file.path | trim('/', 'right') | replace({'/': '_', '.': '_'}) %}
        {% if file.files != null %}
            <div>
                <span id='{{ id }}-span' class='icon-folder-closed'></span><a onclick='openDiv("{{ id }}");'>{{ seen_root ? name : file.path }}</a>
                <div id='{{ id }}' style='margin-left: {{ margin_left }}px; display: none'>
                    {{ self.display_files(self, file.files, indent + 1, true) }}
                </div>
            </div>
        {% else %}
            {% set url = core.buildUrl({'component': 'misc', 'page': 'display_file', 'dir': 'config_upload', 'path': file.path}) %}
            <div>
                <div class="file-viewer"><a onclick='openFrame("{{ url }}", "{{ id }}", "{{ file.name }}")'>
                    <span class='icon-plus'></span>{{ file.name }}</a> <a onclick='openUrl("{{ url }}")'>(Popout)</a>
                </div>

                <div id="file_viewer_{{ id }}" style='margin-left: {{ neg_margin_left }}px'></div>
            </div>
        {% endif %}
    {% endfor %}
{% endmacro %}
