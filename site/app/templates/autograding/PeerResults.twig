{% import 'functions/Badge.twig' as Badge %}
{% import 'functions/TAResultsFunctions.twig' as TAResultsFunctions %}
{% import _self as self %}

<script>
$( document ).ready(function() {
    var numPosts = $('.post_box').length;
    if (numPosts > 0) {
        $("#regradeBoxSection").show();
        $("#ShowRegradeRequestButton").hide();
    }
});
function open_peer_feedback_tab(user, ordered_graders) {
    $('.page-content').hide();
    $('#peer-feedback-'+user).show();
    for (var i = 0 ; i<{{ordered_graders|json_encode|raw}}.length;i++){
        $('#peer_feedback_nav_'+{{ordered_graders|json_encode|raw}}[i]).removeClass('active-btn');
    }
    $('#peer_feedback_nav_'+user).addClass('active-btn');
}
function switch_feedback_modes() {
    if($('#switch_feedback_button')[0].textContent == "Switch to Feedback Mode"){
        $('#switch_feedback_button')[0].textContent = "Switch to Normal Display";
        $('#peer_feedback_wrapper').show();
        $('#comments_wrapper').hide();
        $('#normal_peer_wrapper').hide();
    }
    else{
        $('#switch_feedback_button')[0].textContent = "Switch to Feedback Mode";
        $('#normal_peer_wrapper').show();
        $('#comments_wrapper').show();
        $('#peer_feedback_wrapper').hide();
    }
}
</script>

{% if not been_ta_graded %}
    <br>
    <h3>This assignment has not been graded yet</h3>
{% elseif not active_same_as_graded %}
    <br>
    <h3>The version you have selected to be graded above does not match the version graded by your TA/instructor, please contact TA/instructor if necessary to resolve the problem.</h3>
{% elseif not grading_complete %}
    <br>
    <h3>Grading not complete, please contact an instructor/grader</h3>
{% else %}
    <div class="sub">

        {# Overview #}
        <div class="box" style="padding: 10px; word-break: break-word;">
            <p>Version #{{ ta_graded_version }}</p>
            {% if regrade_available %}
                <i>Grade inquiries are due by {{ regrade_date|date(date_time_format) }}</i>
            {% endif %}
            <div id="comments_wrapper">
                {% for user in ordered_graders if overall_comments[user] is not empty %}
                    <div class="overall-comment-box">
                        <p class="overall-comment-author">
                            Overall note from {{peer_aliases[user]}}:
                        </p>
                        <p class="overall-comment">
                            <span class='gradeable_comment'>{{ overall_comments[user] | nl2br }}</span>
                        </p>
                    </div>
                {% endfor %}
            </div>
        </div>

        {% if peer_components | length > 0 %}
            <div class="box submission-page-total-header">
                <div class="box-title-total">
                    {{ Badge.render(peer_score, peer_max, false) }}
                    <h4>Peer Grading Total</h4>
                    <a id="switch_feedback_button" class="btn btn-default" onclick="switch_feedback_modes()">Switch to Feedback Mode</a>
                </div>
            </div>

            {# Peer Component boxes #}
            <div id="normal_peer_wrapper">
            {% for component in peer_components %}
                {% if component.peer_ids | length <= 5 %}
                        {{ self.renderFewPeerResults(component, peer_aliases, ordered_graders)  }}
                {% else %}
                        {{ self.renderManyPeerResults(component) }}
                {% endif %}                
            {% endfor %}
            </div>
            {{ self.renderPeerFeedbackTable(peer_components, peer_aliases, ordered_graders, overall_comments, uploaded_pdfs, annotated_file_names, student_pdf_view_url)  }}
            {# /Peer Component boxes #}
        {% endif %}
    {# /Total auto + manual #}
    </div>
    {% if regrade_available %}
        <div id="ShowRegradeRequestButton">
            <button type="button" title="Open Grade Inquiry" onclick="$('#regradeBoxSection').show();$([document.documentElement, document.body]).animate({scrollTop: $('#regradeBoxSection').offset().top}, 1000);$(this).hide()" style="margin-right:10px;" class="btn btn-default">Open Grade Inquiry</button>
        </div>
    {% endif %}
{% endif %}


{%- macro renderManyPeerResults(component) -%}
    <div class="box grade-results">
        <div class="box-badge">
            {{ Badge.render(component.total_score, component.points_possible, component.extra_credit) }}
        </div>
        <div class="box-info" style="width:100%">
            <h4>
                {{ component.title|escape }}
            </h4>
            <div style="float:left; width:100%;">
                <p style="padding-bottom: 10px;">
                    {{ component.student_comment|nl2br }}
                </p>
                <p>

                {# This is a layout table #}
                <table class="mobile-table">
                     <thead>
                        <tr>
                            <th class="peer-table-header" style="width:90px;"># of Peers</th>
                            <th class="peer-table-header"> Points </th>
                            <th class="peer-table-title-data"> Title  </th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for mark in component.marks|filter((mark) => mark.show_mark) %}
                            <tr>
                                <td class="peer-table-data">
                                    {{ mark.num_earned }}
                                </td>
                                <td class="peer-table-data">
                                    {{ mark.points|number_format(num_decimals) }}
                                </td>
                                <td class="peer-table-title-data">
                                    {{ mark.title|nl2br }}
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
                </p>
            </div>
        </div>
    </div>
{%- endmacro -%}


{%- macro renderFewPeerResults(component, peer_aliases, ordered_graders) -%}
    <div class="box grade-results">
        <div class="box-badge">
            {{ Badge.render(component.total_score, component.points_possible, component.extra_credit) }}
        </div>
        <div class="box-info" style="width:100%">
            <h4>
                {{ component.title|escape }}
            </h4>
            <div style="float:left; width:100%;">
                <p style="padding-bottom: 10px;">{{ component.student_comment|nl2br }}</p>
                <p>

                {# This is a layout table #}
                <table class="mobile-table">
                     <thead>
                        <tr>
                            {% for grader in ordered_graders if grader in component.peer_ids %}
                                <th class="peer-table-header">
                                    {{ peer_aliases[grader] }}
                                </th>
                            {% endfor %}
                            <th> Points </th>
                            <th class="peer-table-title-data"> Title  </th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for mark in component.marks|filter((mark) => mark.show_mark) %}
                            <tr>
                                {% for grader in ordered_graders if grader in component.peer_ids %}
                                    <td class="peer-table-data">
                                        {% if mark.earned[grader] %}
                                            <div class="col-no-gutters indicator">
                                                <i class="far fa-check-square fa-1g"></i>
                                            </div>
                                        {% else %}
                                            <div class="col-no-gutters indicator">
                                                <i class="far fa-square fa-1g"></i>
                                            </div>
                                        {% endif %}
                                    </td>
                                {% endfor %}
                                <td class="peer-table-data">
                                    {{ mark.points|number_format(num_decimals) }}
                                </td>
                                <td class="peer-table-title-data">
                                    {{ mark.title|nl2br }}
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
                </p>
            </div>
        </div>
    </div>
{%- endmacro -%}

{%- macro renderPeerFeedbackTable(peer_components, peer_aliases, ordered_graders, overall_comments, uploaded_pdfs, annotated_file_names, student_pdf_view_url) -%}
    <div id="peer_feedback_wrapper" style="display: none;">
        <div class="box grade-results">
            {% set first_grader = true %}
            {% for grader in ordered_graders %}
                {% if first_grader == true %}
                    <a class="nav-bar key_to_click active-btn" id="peer_feedback_nav_{{grader}}" onclick="open_peer_feedback_tab('{{grader}}');">{{peer_aliases[grader]}}</a>
                    {% set first_grader = false %}
                {% else %}
                    <a class="nav-bar key_to_click" id="peer_feedback_nav_{{grader}}" onclick="open_peer_feedback_tab('{{grader}}');">{{peer_aliases[grader]}}</a>
                {% endif %}
            {% endfor %}
        </div>
        {% set first_grader = true %}
        {% for grader in ordered_graders %}
            {% if first_grader == true %}
                <div class="page-content" id="peer-feedback-{{grader}}">
                {% set first_grader = false %}
            {% else %}
                <div class="page-content" id="peer-feedback-{{grader}}" style="display: none;">
            {% endif %}
                <table class="mobile-table" id="peer-feedback-table-{{grader}}">
                    <tbody>
                        {% for component in peer_components %}
                            <div class="box-info">
                                    <h4>{{ component.title|escape }}
                                    </h4>
                                    <p>
                                        {% for mark in component.marks %}
                                            {% if mark.earned[grader] %}
                                                <i class="far fa-check-square fa-1g"></i>
                                            {% else %}
                                                <i class="far fa-square fa-1g"></i>
                                            {% endif %}
                                            {{ mark.points|number_format(num_decimals) }}
                                            {{ mark.title|nl2br }}
                                            </br>
                                        {% endfor %}
                                    </p>
                            </div>
                        {% endfor %}
                    </tbody>
                </table>
                {% if overall_comments[grader] is not empty %}
                    <div class="overall-comment-box">
                        <p class="overall-comment-author">
                            Overall note from grader:
                        </p>
                        <p class="overall-comment">
                            <span class='gradeable_comment'>{{ overall_comments[grader] | nl2br }}</span>
                        </p>
                    </div>
                {% endif %}
            
            {% for file in uploaded_pdfs %}
                {% if file.name in annotated_file_names and grader in file.graders%}
                    </br>
                    <p>
                        {{file.name}} :
                    </p>
                    <p>
                        <a class="btn btn-success" onclick="openUrl('{{ student_pdf_view_url }}?filename={{ file.name }}&path={{ file.path|url_encode }}&grader={{ grader|url_encode }}')">View Popup <i class="fas fa-window-restore"></i>
                        </a>
                    </p>
                {% endif %}

            {% endfor %}
            
            </div>
            
        {% endfor %}
    </div>
{%- endmacro -%}