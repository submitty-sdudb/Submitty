{% import 'functions/Badge.twig' as Badge %}

{% if not gradeable.beenTAgraded() %}
    <br>
    <h3>This assignment has not been graded yet</h3>
{% elseif gradeable.getCurrentVersionNumber() != gradeable.getActiveVersion() %}
    <br>
    <h3>The version you have selected above does not match the version graded by your TA/instructor, please contact TA/instructor if necessary to resolve the problem.</h3>
{% elseif not grading_complete %}
    <br>
    <h3>Grading not complete, please contact an instructor/grader</h3>
{% else %}
    <div class="sub">
        {# Overview #}
        <div class="box half" style="padding: 10px; width: 40%; word-break: break-word;">
            <p>Graded by: {{ grader_names|join(", ") }}</p>
            <i>Any regrade requests are due within 7 days of posting</i>
            <p>
                {% if gradeable.getOverallComment()|length != 0 %}
                    <hr>
                    Overall note from Grader:
                    <span class='gradeable_comment'>{{ gradeable.getOverallComment() }}</span>
                {% endif %}
            </p>
        </div>
        {# /Overview #}

        {# Late day info #}
        <div class="box half" style="float:right; width: 40%;">
            <p>Maximum number of late days allowed on this assignment: {{ gradeable.getAllowedLateDays() }}</p>
            <p>Number of days late (before extensions): {{ gradeable.getDaysLate() }}</p>
            <p>Late Days used in previous assignments: {{ late_day_data.late_days_used }}</p>
            <p>Number of late days used on this assignment: {{ late_day_data.late_days_charged }} </p>
            <p>Remaining number of late days: {{ late_day_data.remaining_days }}</p>
            <p>Submission Status: <i>{{ late_day_data.status }}</i></p>
        </div>
        {# /Late day info #}

        {# Manual total #}
        <div class="box">
            <div class="box-title">
                {{ Badge.render(graded_score, graded_max, false) }}
                <h4>{{ has_autograding ? "TA / Instructor Grading Subtotal" : "Total" }}</h4>
            </div>
        </div>
        {# /Manual total #}

        {# Component boxes #}
        {% for component in gradeable.getComponents() %}
            {% if component is not iterable %}
                {# Todo: This is heinous #}
                {% set extra_credit = component.getTitle()|lower|trim == "extra credit" %}

                <div class="box">
                    <div class="box-title">
                        {{ Badge.render(component.getGradedTAPoints(), component.getMaxValue(), extra_credit) }}
                        <h4>{{ component.getTitle() }}
                            {# Grader only shows up if they are not peer and full access #}
                            {% if not gradeable.getPeerGrading() and component.getGrader().accessFullGrading() %}
                                <i>(Graded by: {{ component.getGrader().getLastName() }})</i>
                            {% endif %}
                        </h4>
                        <div style="float:left; word-break: break-word;">
                            <p style="padding-bottom: 10px;">{{ component.getStudentComment() }}</p>
                            <p>
                                {# Todo: move this out of the model #}
                                <span class="gradeable_comment">{{ component.getGradedTAComments('<br>', true, gradeable, false)|raw }}</span>
                            </p>
                        </div>
                    </div>
                </div>
            {% endif %}
        {% endfor %}
        {# /Component boxes #}

        {# Total auto + manual #}
        {% if has_autograding %}
            <div class="box">
                <div class="box-title" style="padding-top: 15px; padding-bottom: 15px;">
                    {{ Badge.render(total_score, total_max, false) }}
                    <h4>Total</h4>
                </div>
            </div>
        {% endif %}
        {# /Total auto + manual #}
    </div>
{% endif %}
