{% import _self as self %}

{# Display the gradeable_message if one exists at the top of the page #}
{% if has_gradeable_message %}
    <div class='content gradeable_message markdown'>{{ gradeable_message | markdown }}</div>
{% endif %}

{% if has_overridden_grades %}
    <div class='content overridden_message'><p>如对成绩有疑问，请联系老师</p></div>
{% endif %}

<div class="content" id="gradeable-submission-cont">
    <header id="gradeable-info">
        <h1>
            提交{{ gradeable_name }}：
            {% if gradeable_url|trim != "" %}
                <a class="external" href="{{ gradeable_url }}" target="_blank" aria-label="Go to instructions for {{ gradeable_name }}">
                    <i class="fas fa-external-link-alt"></i>
                </a>
            {% endif %}
        </h1>
        {% if is_timed %}
            <div id="gradeable-timer">
                <div id="gradeable-progress">
                    <div id="gradeable-progress-bar"></div>
                </div>
                <h2 id="time-remaining-text">剩余时间：</h2>
            </div>

        {% endif %}
        {% if has_due_date %}
            {% set diff_time_zone = server_time_zone_string != user_time_zone_string %}

            <div id="gradeable-info-due-dates">
                <h2>
                    DDL: {{ due_date|date(date_time_format) }}
                    {% if diff_time_zone %}
                        <i>(当地时间)</i>
                    {% endif %}
                </h2>

                {% if diff_time_zone %}
                    <h2>{{ due_date|date(date_time_format, server_time_zone_string) }} <i>(服务器时间)</i></h2>
                {% endif %}
                <h2 id="gradeable-time-remaining-text">作业剩余时间：</h2>
            </div>
        {% endif %}
        <div class="loading-bar-wrapper">
            <span>上传进度<span id="loading-bar-percentage"></span></span>
            <progress id="loading-bar" value="0" ></progress>
        </div>
    </header>

    {% if part_names|length > 1 and one_part_only %}
        <h4 style="color: red;">
            请将文件拖入此部分，否则会上传失败。
        </h4>
    {% endif %}

    {% if show_no_late_submission_warning %}
        <i class="red-message">注意，你正在迟交一份不允许迟交的作业！</i>
    {% endif %}

    {# Admin submission type selector #}
    {% if core.getUser().accessFullGrading() %}
        <form id="submission-form" method="post">
            <fieldset id="submission-mode">
                <legend>选择上传模式</legend>
                <label for="radio-normal">
                    <input type='radio' id="radio-normal" name="submission_type" checked="checked">
                    普通提交
                </label>
                <label for="radio-student">
                    <input type='radio' id="radio-student" name="submission_type">
                    为学生提交
                </label>
                {% if part_names|length == 1 and not is_vcs %}
                    <label for="radio-bulk">
                        <input type='radio' id="radio-bulk" name="submission_type">
                        批量上传
                        <a aria-label="Bulk PDF Upload Help" href = "https://submitty.org/instructor/bulk_pdf_upload" target="_blank">
                            <i title="Bulk PDF Upload Help" class="far fa-question-circle"></i>
                        </a>
                    </label>
                {% endif %}
            </fieldset>
            <div id="user-id-input" class="hide">
                <div class="sub">
                    注意：这会<i>永久</i>影响学生已上传的版本，请谨慎使用！
                </div>
                <div class="sub">
                    <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
                    <label for="user_id"> user_id: </label>
		            <input type="text" id= "user_id" value ="" placeholder="{{ user_id }}"/>
                </div>
            </div>
            <div class="sub hide" id="pdf-submit-button">
                <div class="sub">
                    <label for="use-qr">Split by QR code?</label>
                    <input type="checkbox" id="use-qr">

                    {% if feature_flag_enabled('submitty_ocr') %}
                    <label id ="use-ocr-id"for ="use-ocr">Detect Student ID's?</label>
                    <input type="checkbox" id="use-ocr">
                    {% endif %}


                    <br>

                    <span id="prefix-prompt">QR code prefix/suffix:
                        <a aria-label="Split by QR Code Help" href="https://submitty.org/instructor/bulk_pdf_upload#automatic-association-of-pdfs-using-customized-exams-with-qr-codes" target="_blank">
	                    <i title="Split by QR Code Help" class="far fa-question-circle"></i></a>
                    </span>

                    <label id="pages-prompt" for="num_pages">按页数拆分：</label>
                    <input type="number" id= "num_pages" placeholder="required"/>
                    <input type="text" id="qr_prefix" placeholder="Prefix (optional)" aria-label="QR Prefix (Optional)" />
                    <input type="text" id="qr_suffix" placeholder="Suffix (optional)" aria-label="QR Suffix (Optional)" />
                    <div id="expected-num-box">
                        <label for= "expected-pages-input">每个PDF文件的页数：</label>
                        <input id= "expected-pages-input" placeholder="e.g. 1-5, 8, 11-13" onchange="highlightPageCount()" />
                    </div>
                </div>
            </div>
        </form>

        <script>
            $(function() {
                students_full = {{ students_full|json_encode|raw }};
                $('#qr_prefix').prop('hidden', true);
                $('#qr_suffix').prop('hidden', true);
                $('#prefix-prompt').prop('hidden', true);
                $('#bulk_progress_box').prop('hidden', true);
                $('#expected-num-box').prop('hidden', true);

                //load what upload mode the user selected (if any)
                if(sessionStorage.getItem('radio-bulk')){
                    $('#radio-bulk').prop('checked', true);
                    $('#bulk_progress_box').prop('hidden', false);
                }
                else if(sessionStorage.getItem('radio-student')){
                    $('#radio-student').prop('checked',true);
                }
                else{
                    $('#radio-normal').prop('checked',true);
                }
                //load if bulkupload with qr codes selected or not
                if(sessionStorage.getItem('use-qr')){
                    $('#qr_prefix').prop('hidden',false)
                    $('#qr_suffix').prop('hidden',false)
                    $('#prefix-prompt').prop('hidden', false);
                    $('#pages-prompt').prop('hidden', true);
                    $('#num_pages').prop('hidden', true);
                    $('#use-qr').prop('checked',true);
                    $('#expected-num-box').prop('hidden', false);
                    $('#use-ocr').prop('hidden', false);
                    $('#use-ocr-id').prop('hidden', false);
                    //populate prefix textarea
                    if(sessionStorage.getItem('qr_prefix')){
                        $('#qr_prefix').val(sessionStorage.getItem('qr_prefix'));
                    }
                    if(sessionStorage.getItem('qr_suffix')){
                        $('#qr_suffix').val(sessionStorage.getItem('qr_suffix'));
                    }
                    if(sessionStorage.getItem('use-ocr')){
                        $('#use-ocr').prop('checked', true);
                    }
                }
                if ($("#radio-student").is(":checked")) {
                    $('#user-id-input').show();
                }
                if ($("#radio-bulk").is(":checked")) {
                    $('#pdf-submit-button').show();
                    $('#bulk_progress_box').prop('hidden', false);
                }
                else{
                     $('#bulk_progress_box').prop('hidden', true);
                }
                if($('#use-qr').is(':checked')){
                    //save qr_code prefix on textarea change
                    $('#qr_prefix').change(function(){
                        sessionStorage.setItem('qr_prefix', $('#qr_prefix').val());
                    });
                    $('#qr_suffix').change(function(){
                        sessionStorage.setItem('qr_suffix', $('#qr_suffix').val());
                    });

                    $('#use-ocr').prop('hidden', false);
                    $('#use-ocr-id').prop('hidden', false);

                    if(sessionStorage.getItem('use-ocr'))
                        $('#use-ocr').prop('checked', true);
                    else
                        $('#use-ocr').prop('checked', false);
                }
                $('#radio-normal').click(function() {
                    sessionStorage.setItem('radio-normal', true);
                    sessionStorage.removeItem('radio-student');
                    sessionStorage.removeItem('radio-bulk');
                    $('#pdf-submit-button').hide();
                    $('#user-id-input').hide();
                    $('#pdf-submit-button').hide();
                    $('#user_id').val('');
                    $('#bulk_progress_box').prop('hidden', true);
                });
                $('#radio-student').click(function() {
                    sessionStorage.setItem('radio-student', true);
                    sessionStorage.removeItem('radio-bulk');
                    sessionStorage.removeItem('radio-normal');
                    $('#pdf-submit-button').hide();
                    $('#user-id-input').show();
                    $('#bulk_progress_box').prop('hidden', true);
                });
                $('#radio-bulk').click(function()  {
                    sessionStorage.setItem('radio-bulk', true);
                    sessionStorage.removeItem('radio-student');
                    sessionStorage.removeItem('radio-normal');
                    $('#user-id-input').hide();
                    $('#pdf-submit-button').show();
                    $('#user_id').val('');
                    $('#bulk_progress_box').prop('hidden', false);
                });
                $('#use-qr').click(function(){
                    (sessionStorage.getItem('use-qr')) ? sessionStorage.removeItem('use-qr') : sessionStorage.setItem('use-qr', true);
                    $('#num_pages').prop('hidden', !$('#num_pages').is(':hidden'));
                    $('#qr_prefix').prop('hidden', !$('#qr_prefix').is(':hidden'));
                    $('#qr_suffix').prop('hidden', !$('#qr_suffix').is(':hidden'));
                    $('#prefix-prompt').prop('hidden', !$('#prefix-prompt').is(':hidden'));
                    $('#pages-prompt').prop('hidden', !$('#pages-prompt').is(':hidden'));
                    $('#expected-num-box').prop('hidden',!$('#expected-num-box').is(':hidden'));

                    if(!$('#use-qr').is(":checked")){
                        $('#use-ocr').prop('checked', false);
                    }
                });
                $('#use-ocr').click(function(){
                    sessionStorage.getItem('use-ocr') ? sessionStorage.removeItem('use-ocr') :
                        sessionStorage.setItem('use-ocr', true);

                    if( $('#use-qr').is(":checked") !== $('#use-ocr').is(":checked") ){
                        $('#use-qr').click();
                    }

                });
                $("#user_id").autocomplete({
                    source: students_full
                });
            });
        </script>
    {% endif %}
    {# /Admin submission type selector #}

    {% if is_vcs %}
        {% if vcs_host_type == 0 or vcs_host_type == 1 %}
            <h3>访问你的项目：</h3>
            <span><em>注意：可能需要一段时间初始化你的项目，详情请查阅作业信息。</em></span><br />
            <samp>git  clone  {{ repository_path }}  SPECIFY_TARGET_DIRECTORY</samp>
        {% endif %}

        {% if vcs_host_type == 2 or vcs_host_type == 3 %}
            <h3>输入你的项目GitHub URL: </h3>

            GitHub URL: &nbsp;&nbsp; <kbd>https://www.github.com/</kbd>
            <input type="text" id="github-user-id" name="git_user_id" class="required github-id" value="{{ github_user_id }}" placeholder="user_name"/>
            <kbd>/</kbd>
            <input type="text" id="github-repo-id" name="git_repo_id" class="required github-id" value="{{ github_repo_id }}" placeholder="repo_name"/>

            {% if vcs_host_type == 2 %}
            注意：这应当是一个<em>公开项目</em>，能被所有人访问
            {% else %}
            注意：如果这不是<em>公开项目</em>，请确保授予老师与助教访问权限
            {% endif %}

        {% endif %}
        <input type="submit" id="submit" class="btn btn-primary" value="Grade My Repository" />
    {% else %}

    {% if is_notebook %}
        {% include 'notebook/Notebook.twig' with {
            "notebook": notebook,
            "testcase_messages" : testcase_messages,
            "image_data" : image_data,
            "numberUtils" : numberUtils,
            "student_id" : student_id,
            "gradeable_id" : gradeable_id,
            "highest_version" : highest_version,
            "max_file_uploads" : max_file_uploads,
            "old_files" : old_files
        } %}
    {% endif %}

        {# File upload boxes #}
        <div id="upload-boxes">
            {# Submit boxes #}
            {% for part in part_names %}
                {# uploadIndex and input-file + Index required for drag-and-drop.js #}
                <div tabindex="0"
                     id="upload{{ loop.index }}"
                     class="upload-box"
                     onkeypress="clicked_on_box(event)"
                     role="text"
                     aria-label="Press enter to upload your {{ part }} file"
                >
                    <h2 class="label" id="label{{ loop.index }}">
                        {% if part_names|length > 1 %}
                            在这里拖放{{ part }}文件或点击打开上传窗口
                        {% else %}
                            在这里拖放文件或点击打开上传窗口
                        {% endif %}
                    </h2>
                    <input type="file" name="files" id="input-file{{ loop.index }}" class="hide" onchange="addFilesFromInput({{ loop.index }})" multiple aria-label="Select Files to upload" />
                    <table class="file-upload-table" id="file-upload-table-{{ loop.index }}">
                      <tr style="background:transparent; display:none;">
                        <th>文件名:</th>
                        <th>大小:</th>
                      </tr>
                    </table>
                    <p>最多允许上传{{ max_file_uploads }}个文件.</p>
                </div>
            {% endfor %}
        </div>

        {# Page selector #}
        {% if student_page %}
            <form id="pdfPageStudent">
                <div class="sub">
                    <div>输入每个问题对应的页码。如果存在跨页回答，则只需输入起始页码</div>
                    {% for component_name in component_names %}
                        <div>{{ component_name }}: <input type="number" id="page_{{ loop.index0 }}" min="1"></div>
                    {% endfor %}
                </div>
            </form>
        {% endif %}
        {# /Page selector #}

        <div class="upload-message">
            <p>
                {{ upload_message | markdown}}
            </p>
        </div>

        <button type="button" id="submit" class="btn btn-success">提交</button>

        {% if part_names is not empty %}
            <button type="button" id="startnew" class="btn btn-primary">清空</button>

            {% if display_version == highest_version and display_version > 0 %}
                <button type="button" id= "getprev" class="btn btn-primary">使用最近一次提交</button>
                <script>
                    $(function() {
                        setUsePrevious();
                        {% for file in old_files %}
                            addLabel('{{ file.name }}', '{{ file.size }}', {{ file.part }}, true);
                            readPrevious('{{ file.name }}', {{ file.part }});
                        {% endfor %}
                    });
                </script>
            {% endif %}
        {% endif %}

        <script>
            $(function() {
                setButtonStatus();
                initMaxNoFiles({{ max_file_uploads }});
            });

            // CLICK ON THE DRAG-AND-DROP ZONE TO OPEN A FILE BROWSER OR DRAG AND DROP FILES TO UPLOAD
            if (typeof num_parts === "undefined"){
                var num_parts = {{ part_names|length }};
            }
            createArray(num_parts);
            var assignment_version = {{ display_version }};
            var highest_version = {{ highest_version }};
            for (var i = 1; i <= num_parts; i++ ){
                initializeDropZone("upload" + String(i));
            }


            $("#startnew").click(function(e){ // Clear all the selected files in the buckets
                for (var i = 1; i <= num_parts; i++){
                    deleteFiles(i);
                }
                e.stopPropagation();
            });

            // GET FILES OF THE HIGHEST VERSION
            if (assignment_version == highest_version && highest_version > 0) {
                $("#getprev").click(function(e){
                    $("#startnew").click();
                    {% for file in old_files %}
                        addLabel('{{ file.name }}', '{{ file.size }}', {{ file.part }}, true);
                        readPrevious('{{ file.name }}', {{ file.part }});
                    {% endfor %}
                    setUsePrevious();
                    setButtonStatus();
                    e.stopPropagation();
                });
            }
        </script>
    {% endif %}
</div>

{% if core.getUser().accessFullGrading() %}
    {% include 'submission/homework/PreviousSubmissionForm.twig' %}
    {% include 'submission/homework/BulkUploadProgressBox.twig' %}
{% endif %}

<script>
    function makeSubmission(user_id, highest_version, is_pdf, path, git_user_id, git_repo_id, merge_previous=false, clobber=false) {
        // submit the selected pdf
        path = decodeURIComponent(path);
        if (is_pdf) {
            submitSplitItem("{{ csrf_token }}", "{{ gradeable_id }}", user_id, path, merge_previous, clobber);
        }
        // otherwise, this is a regular submission of the uploaded files
        else if (user_id == "") {
            handleSubmission({{ late_days_use }},
                {{ days_to_be_charged }},
                {{ allowed_late_days }},
                {{ highest_version }},
                {{ max_submissions }},
                "{{ csrf_token }}",
                {{ is_vcs ? "true" : "false" }},
                {{ num_inputs }},
                "{{ gradeable_id }}",
                "{{ user_id }}",
                git_user_id,
                git_repo_id,
                {{ student_page ? "true" : "false" }},
                {{ component_names|length }},
                merge_previous,
                clobber
            );
        }
        else {
            handleSubmission({{ late_days_use }},
                {{ days_to_be_charged }},
                {{ allowed_late_days }},
                highest_version,
                {{ max_submissions }},
                "{{ csrf_token }}",
                {{ is_vcs ? "true" : "false" }},
                {{ num_inputs }},
                "{{ gradeable_id }}",
                user_id,
                git_user_id,
                git_repo_id,
                {{ student_page ? "true" : "false" }},
                {{ component_names|length }},
                merge_previous,
                clobber
            );
        }
    }
    $(function() {
        $("#submit").click(function(e){ // Submit button
            var user_id = "";
            var num_pages = 0;
            if ($('#radio-student').is(':checked')) {
                user_id = $("#user_id").val();
            };
            if ($('#radio-bulk').is(':checked')) {
                num_pages = $("#num_pages").val();
                use_qr = $("#use-qr").is(":checked");
                use_ocr = $('#use-ocr').is(":checked");
                qr_prefix = $('#qr_prefix').val();
                qr_suffix = $('#qr_suffix').val();
                if($('#use-qr').is(':checked')){
                    if(!sessionStorage.getItem('qr_prefix'))
                        sessionStorage.setItem('qr_prefix', qr_prefix );
                    if(!sessionStorage.getItem('qr_suffix'))
                        sessionStorage.setItem('qr_suffix', qr_suffix );
                }
            };
            // vcs upload
            var git_user_id = "";
            var git_repo_id = "";
            if ({{ is_vcs ? "true" : "false" }}) {
                git_user_id = $("#github-user-id").val();
                git_repo_id = $("#github-repo-id").val();
            }
            // bulk upload
            if ($("#radio-bulk").is(":checked")) {
                handleBulk("{{ gradeable_id }}",
                            {{ max_post_size }},
                            {{ max_file_size }},
                            num_pages, use_qr,
                            use_ocr, qr_prefix, qr_suffix
                          );
            }
            // no user id entered, upload for whoever is logged in
            else if (user_id == ""){
                makeSubmission(user_id, {{ highest_version }}, false, "", git_repo_id);
            }
            // user id entered, need to validate first
            else {
                validateUserId("{{ csrf_token }}", "{{ gradeable_id }}", user_id)
                .then(function(response){
                    if(response['data']['previous_submission']){
                        let has_been_called = false;
                        var option = displayPreviousSubmissionOptions(getSubmissionOptionForStudentOnly);

                        return;

                        function getSubmissionOptionForStudentOnly(option){
                            if(has_been_called)
                                return;

                            var merge_previous = false;
                            var clobber = false;

                            if(option == 2){
                                merge_previous = true;
                            }
                            else if(option == 3){
                                merge_previous = true;
                                clobber = true;
                            }

                            makeSubmission(user_id,response['data']['highest_version'], false, "", "", "", merge_previous,clobber);
                        }
                    }
                    else{
                        makeSubmission(user_id, response['data']['highest_version'], false, "", "", "");
                    }
                });
            }
            e.stopPropagation();
        });
    });
    initializeTimer('{{ gradeable_id }}');
</script>


