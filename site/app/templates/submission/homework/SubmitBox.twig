{% import _self as self %}

{# Display the gradeable_message if one exists at the top of the page #}
{% if has_gradeable_message %}
    <div class='content gradeable_message'><p>{{ gradeable_message|raw }}</p></div>
{% endif %}

<div class="content">    
    <div class="upperinfo">
        <h1 class="upperinfo-left">New submission for: {{ gradeable_name }}</h1>
        {% if has_due_date %}
            <h3 class="upperinfo-right">Due: {{ formatted_due_date }}</h3>
        {% endif %}
    </div>

    {% if show_no_late_submission_warning %}
        <div>
            <i class="red-message">Warning, you are making a late submission for a gradeable without late submissions enabled!</i>
        </div>
    {% endif %}

    {# Admin submission type selector #}
    {% if core.getUser().accessFullGrading() %}
        <form id="submissionForm" method="post" style="text-align: center; margin: 0 auto; width: 100%; ">
            <div >
                <input type='radio' id="radio_normal" name="submission_type" checked="true">
                Normal Submission
                <input type='radio' id="radio_student" name="submission_type">
                Make Submission for a Student
                {% if part_names|length == 1 and not is_vcs %}
                    <input type='radio' id="radio_bulk" name="submission_type">
                    Bulk Upload
                {% endif %}
            </div>
            <div id="user_id_input" style="display: none">
                <div class="sub">
                    Input the user_id of the student you wish to submit for. This <i>permanently</i> affects the student's submissions, so please use with caution.
                </div>
                <div class="sub">
                    <input type="hidden" name="csrf_token" value="{{ core.getCsrfToken() }}" />
                    user_id: <input type="text" id= "user_id" value ="" placeholder="{{ user_id }}"/>
                </div>
            </div>
            <div class = "sub" id="pdf_submit_button" style="display: none">
                <div class="sub">
                    Split by QR code? 
                    <input type="checkbox" id="use_qr">
                    <span id="pages_prompt"># of page(s) per PDF:</span> 
                    <span id="prefix_prompt">QR code prefix/suffix: 
                    <a style="text-decoration:none;" href = "https://submitty.org/instructor/exams#bulk-upload-and-split-with-qr-codes" target="_none">
                        <i title="Bulk Upload QR Help" class="far fa-question-circle"></i>
                    </a>
                    </span>
                    <input type="number" id= "num_pages" placeholder="required"/>
                    <input type="text" id="qr_prefix" placeholder="Prefix (optional)" />
                     <input type="text" id="qr_suffix" placeholder="Suffix (optional)" />
                </div>
            </div>
        </form>

        <script type="text/javascript">
            $(function() {
                students_full = {{ students_full|json_encode|raw }};
                $('#qr_prefix').prop('hidden', true);
                $('#qr_suffix').prop('hidden', true);
                $('#prefix_prompt').prop('hidden', true);
                //load what upload mode the user selected (if any)
                if(sessionStorage.getItem('radio_bulk')){
                    $('#radio_bulk').prop('checked', true);
                }else if(sessionStorage.getItem('radio_student')){
                    $('#radio_student').prop('checked',true);
                }else{
                    $('#radio_normal').prop('checked',true);
                }
                //load if bulkupload with qr codes selected or not
                if(sessionStorage.getItem('use_qr')){
                    $('#qr_prefix').prop('hidden',false)
                    $('#qr_suffix').prop('hidden',false)
                    $('#prefix_prompt').prop('hidden', false);
                    $('#pages_prompt').prop('hidden', true);
                    $('#num_pages').prop('hidden', true);
                    $('#use_qr').prop('checked',true);
                    //populate prefix textarea
                    if(sessionStorage.getItem('qr_prefix')){
                        $('#qr_prefix').val(sessionStorage.getItem('qr_prefix'));
                    }
                    if(sessionStorage.getItem('qr_suffix')){
                        $('#qr_suffix').val(sessionStorage.getItem('qr_suffix'));
                    }
                }
                if ($("#radio_student").is(":checked")) {
                    $('#user_id_input').show();
                }
                if ($("#radio_bulk").is(":checked")) {
                    $('#pdf_submit_button').show();
                }
                if($('#use_qr').is(':checked')){
                    //save qr_code prefix on textarea change
                    $('#qr_prefix').change(function(){
                        sessionStorage.setItem('qr_prefix', $('#qr_prefix').val());
                    });
                    $('#qr_suffix').change(function(){
                        sessionStorage.setItem('qr_suffix', $('#qr_suffix').val());
                    });
                }
                $('#radio_normal').click(function() {
                    sessionStorage.setItem('radio_normal', true);
                    sessionStorage.removeItem('radio_student');
                    sessionStorage.removeItem('radio_bulk');
                    $('#pdf_submit_button').hide();
                    $('#user_id_input').hide();
                    $('#pdf_submit_button').hide();
                    $('#user_id').val('');
                });
                $('#radio_student').click(function() {
                    sessionStorage.setItem('radio_student', true);
                    sessionStorage.removeItem('radio_bulk');
                    sessionStorage.removeItem('radio_normal');
                    $('#pdf_submit_button').hide();
                    $('#user_id_input').show();
                });
                $('#radio_bulk').click(function()  {
                    sessionStorage.setItem('radio_bulk', true);
                    sessionStorage.removeItem('radio_student');
                    sessionStorage.removeItem('radio_normal');
                    $('#user_id_input').hide();
                    $('#pdf_submit_button').show();
                    $('#user_id').val('');
                });
                $('#use_qr').click(function(){
                    (sessionStorage.getItem('use_qr')) ? sessionStorage.removeItem('use_qr') : sessionStorage.setItem('use_qr', true);
                    $('#num_pages').prop('hidden', !$('#num_pages').is(':hidden'));
                    $('#qr_prefix').prop('hidden', !$('#qr_prefix').is(':hidden'));
                    $('#qr_suffix').prop('hidden', !$('#qr_suffix').is(':hidden'));
                    $('#prefix_prompt').prop('hidden', !$('#prefix_prompt').is(':hidden'));
                    $('#pages_prompt').prop('hidden', !$('#pages_prompt').is(':hidden'));
                });
                $("#user_id").autocomplete({
                    source: students_full
                });
            });
        </script>
    {% endif %}
    {# /Admin submission type selector #}

    {% if is_vcs %}
        {#
            TODO: Build ability for students to specify their own repo url
            if (strpos($gradeable->getSubdirectory(),"\$repo_id") !== false) {
                $return .= <<<HTML
    repository id: <input type="text" id="repo_id" class="required" value="" placeholder="(Required)"/><br /><br />
    HTML;
            }
            else if ($gradeable->getSubdirectory() == "" && $this->core->getConfig()->getVcsBaseUrl() == "") {
                $return .= <<<HTML
    Enter the URL for your repository, ex. <kbd>https://github.com/username/homework-1</kbd><br />
    repository URL: <input type="text" id="repo_id" class="required" value ="" placeholder="(Required)"/><br /><br />
    HTML;
            }
        #}
        <h3>To access your Repository:</h3>
        <span><em>Note: There may be a delay before your repository is prepared, please refer to assignment instructions.</em></span><br />
        <samp>git  clone  {{ repository_path }}  SPECIFY_TARGET_DIRECTORY</samp><br /><br />
        <input type="submit" id="submit" class="btn btn-primary" value="Grade My Repository" />
    {% else %}
        <div id="upload-boxes" style="display:table; border-spacing: 5px; width:100%">

            {# Text boxes #}
            {% for textbox in textboxes %}
                {{ self.render_textbox(textbox, image_data, loop.index0) }}
            {% endfor %}
            {# /Text boxes #}

            {# Submit boxes #}
            {% for part in part_names %}
                <div id="upload{{ loop.index }}" style="cursor: pointer; text-align: center; border: dashed 2px lightgrey; display:table-cell; height: 150px;">
                    <h3 class="label" id="label{{ loop.index }}">
                        {% if part_names|length > 1 %}
                            Drag your {{ part }} here or click to open file browser
                        {% else %}
                            Drag your file(s) here or click to open file browser
                        {% endif %}
                    </h3>
                    <input type="file" name="files" id="input_file{{ loop.index }}" style="display: none" onchange="addFilesFromInput({{ loop.index }})" multiple />
                </div>
            {% endfor %}
            {# /Submit boxes #}
        </div>

        {# Page selector #}
        {% if student_page %}
            <form id="pdfPageStudent">
                <div class="sub">
                    <div>Enter the page number that corresponds to each question. If the answer spans multiple pages, enter the page the answer starts on.</div>
                    {% for component_name in component_names %}
                        <div>{{ component_name }}: <input type="number" id="page_{{ loop.index0 }}" min="1"></div><br />
                    {% endfor %}
                </div>
            </form>
        {% endif %}
        {# /Page selector #}

        <div>
            {{ upload_message }}
            <br>
            &nbsp;
        </div>

        <button type="button" id="submit" class="btn btn-success" style="margin-right: 100px;">Submit</button>
        <button type="button" id="startnew" class="btn btn-primary">Clear</button>

        {% if display_version == highest_version and display_version > 0 %}
            <button type="button" id= "getprev" class="btn btn-primary">Use Most Recent Submission</button>

            {% if core.getConfig().keepPreviousFiles() %}
            <script type="text/javascript">
                $(function() {
                    setUsePrevious();
                    {% for file in old_files %}
                        addLabel('{{ file.name }}', '{{ file.size }}', {{ file.part }}, true);
                        readPrevious('{{ file.name }}', {{ file.part }});
                    {% endfor %}
                });
            </script>
            {% endif %}
        {% endif %}

        <script type="text/javascript">
            $(function() {
                setButtonStatus();
            });

            // CLICK ON THE DRAG-AND-DROP ZONE TO OPEN A FILE BROWSER OR DRAG AND DROP FILES TO UPLOAD
            var num_parts = {{ part_names|length }};
            createArray(num_parts);
            var assignment_version = {{ display_version }};
            var highest_version = {{ highest_version }};
            for (var i = 1; i <= num_parts; i++ ){
                var dropzone = document.getElementById("upload" + i);
                dropzone.addEventListener("click", clicked_on_box, false);
                dropzone.addEventListener("dragenter", draghandle, false);
                dropzone.addEventListener("dragover", draghandle, false);
                dropzone.addEventListener("dragleave", draghandle, false);
                dropzone.addEventListener("drop", drop, false);
            }

            $("#startnew").click(function(e){ // Clear all the selected files in the buckets
                for (var i = 1; i <= num_parts; i++){
                    deleteFiles(i);
                }
                e.stopPropagation();
            });

            // GET FILES OF THE HIGHEST VERSION
            if (assignment_version == highest_version && highest_version > 0) {
                $("#getprev").click(function(e){
                    $("#startnew").click();
                    {% for file in old_files %}
                        addLabel('{{ file.name }}', '{{ file.size }}', {{ file.part }}, true);
                        readPrevious('{{ file.name }}', {{ file.part }});
                    {% endfor %}
                    setUsePrevious();
                    setButtonStatus();
                    e.stopPropagation();
                });
            }
        </script>
    {% endif %}
</div>

{% if core.getUser().accessFullGrading() %}
    {% include 'submission/homework/PreviousSubmissionForm.twig' %}
{% endif %}

<script type="text/javascript">
    function makeSubmission(user_id, highest_version, is_pdf, path, count, repo_id, merge_previous=false, clobber=false) {
        // submit the selected pdf
        path = decodeURIComponent(path);
        if (is_pdf) {
            submitSplitItem("{{ core.getCsrfToken() }}", "{{ gradeable_id }}", user_id, path, count, merge_previous, clobber);
            moveNextInput(count);
        }

        // otherwise, this is a regular submission of the uploaded files
        else if (user_id == "") {
            handleSubmission({{ late_days_use }},
                {{ allowed_late_days }},
                {{ highest_version }},
                {{ max_submissions }},
                "{{ core.getCsrfToken() }}",
                {{ is_vcs ? "true" : "false" }},
                {{ num_text_boxes }},
                "{{ gradeable_id }}",
                "{{ user_id }}",
                repo_id,
                {{ student_page ? "true" : "false" }},
                {{ component_names|length }},
                merge_previous,
                clobber
            );
        }
        else {
            handleSubmission({{ late_days_use }},
                {{ allowed_late_days }},
                highest_version,
                {{ max_submissions }},
                "{{ core.getCsrfToken() }}",
                {{ is_vcs ? "true" : "false" }},
                {{ num_text_boxes }},
                "{{ gradeable_id }}",
                user_id,
                repo_id,
                {{ student_page ? "true" : "false" }},
                {{ component_names|length }},
                merge_previous,
                clobber
            );
        }
    }
    $(function() {
        $("#submit").click(function(e){ // Submit button
            var user_id = "";
            var repo_id = "";
            var num_pages = 0;
            if ($('#radio_student').is(':checked')) {
                user_id = $("#user_id").val();
            };
            if ($('#radio_bulk').is(':checked')) {
                num_pages = $("#num_pages").val();
                use_qr = $("#use_qr").is(":checked");
                qr_prefix = $('#qr_prefix').val();
                qr_suffix = $('#qr_suffix').val();
                if($('#use_qr').is(':checked')){
                    if(!sessionStorage.getItem('qr_prefix'))
                        sessionStorage.setItem('qr_prefix', qr_prefix );
                    if(!sessionStorage.getItem('qr_suffix'))
                        sessionStorage.setItem('qr_suffix', qr_suffix );
                }
            };
            // vcs upload
            if ({{ is_vcs ? "true" : "false" }}) {
                repo_id = $("#repo_id").val();
            }
            // bulk upload
            if ($("#radio_bulk").is(":checked")) {
                handleBulk("{{ gradeable_id }}", num_pages, use_qr, qr_prefix, qr_suffix );
            }
            // no user id entered, upload for whoever is logged in
            else if (user_id == ""){
                makeSubmission(user_id, {{ highest_version }}, false, "", "", repo_id);
            }
            // user id entered, need to validate first
            else {
                validateUserId("{{ core.getCsrfToken() }}", "{{ gradeable_id }}", user_id, false, "", "", repo_id, makeSubmission);
            }
            e.stopPropagation();
        });
    });
</script>

{% macro render_textbox(textbox, images, index) %}
    {% for image in textbox.images %}
        <img src="{{ attribute(images, image.name) }}"
        {% if image.width > 0 %}
            width="{{ image.width }}"
        {% endif %}
        {% if image.height > 0 %}
            height="{{ image.height }}"
        {% endif %}
        />
    {% endfor %}

    <p style="max-width: 50em;">
        {{ textbox.label }}
        <br>
        {% if textbox.row_count == 0 %}
            <input type="text" name="textbox_{{ index }}" id="textbox_{{ index }}" onKeyPress="handle_textbox_keypress();">
        {% else %}
            <textarea rows="{{ textbox.row_count }}" cols="50"  style="width:60em; height:100%;" name="textbox_{{ index }}" id="textbox_{{ index }}" onKeyPress="handle_textbox_keypress();"></textarea>
            {#
                Allow tab in the larger text boxes (normally tab moves to the next textbox)
                http://stackoverflow.com/questions/6140632/how-to-handle-tab-in-textarea
            #}
            <script>
                $("#textbox_{{ index }}").keydown(function(e) {
                    if(e.keyCode === 9) { // tab was pressed
                        // get caret position/selection
                        var start = this.selectionStart;
                        var end = this.selectionEnd;
                        var $this = $(this);
                        var value = $this.val();
                        // set textarea value to: text before caret + tab + text after caret
                        $this.val(value.substring(0, start)
                            + "\t"
                            + value.substring(end));
                        // put caret at right position again (add one for the tab)
                        this.selectionStart = this.selectionEnd = start + 1;
                        // prevent the focus lose
                        e.preventDefault();
                        e.stopPropagation();
                        return false;
                    }
                });
            </script>
        {% endif %}
    </p>
    <br>
{% endmacro %}
